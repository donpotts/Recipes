@page "/account/changePassword"
@using System.ComponentModel.DataAnnotations
@inject AppService AppService
@inject ISnackbar Snackbar
@attribute [Authorize]

<PageTitle>Change Password</PageTitle>

<div class="mb-3">
    <MudText Typo="Typo.h3">Change Password</MudText>
</div>

<MudContainer MaxWidth="MaxWidth.Small" Class="mb-3">
    <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <MudCard>
            <MudCardContent>
                <MudTextField @bind-Value="model.OldPassword" For="@(() => model.OldPassword)" Label="Old Password" InputType="InputType.Password" />
                <MudTextField @bind-Value="model.NewPassword" For="@(() => model.NewPassword)" Label="New Password" InputType="InputType.Password" />
                <MudTextField @bind-Value="model.ConfirmNewPassword" For="@(() => model.ConfirmNewPassword)" Label="Confirm New Password" InputType="InputType.Password" />
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Submit</MudButton>
            </MudCardActions>
        </MudCard>
    </EditForm>
</MudContainer>


@code {
    private ChangePasswordModel model = new();

    private async Task OnValidSubmit(EditContext context)
    {
        try
        {
            await AppService.ChangePasswordAsync(model.OldPassword!, model.NewPassword!);

            model = new();
            Snackbar.Add("Password changed", Severity.Success);
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }
    }

    private class ChangePasswordModel
    {
        [Required]
        [Display(Name = "Old Password")]
        public string? OldPassword { get; set; }

        [Required]
        [Display(Name = "New Password")]
        public string? NewPassword { get; set; }

        [Required]
        [Compare(nameof(NewPassword))]
        [Display(Name = "Confirm New Password")]
        public string? ConfirmNewPassword { get; set; }
    }
}
